---
# this yaml file contains the settings used for the knot density experiment

# general parameters
device: "cuda:0" # device to run the experiment on
results_dir: "test_with_fixed_K4_M8_N16" 
# results_dir: "test_with_fixed_K4_M4_N8" 
seed: 0 # seed for reproducibility
max_nr_of_experiments: 64 # maximum number of experiments to run

# we want to run the experiment in different contexts of dimension sizes and sparsity levels of x
# y dimension M, x dimension N, sparsity in x of K, each described by a range
# we also have some noise in the data according to y=Ax+noise with the noise~N(0, noise_std**2)
data_that_varies:
  K:
    min: 4
    max: 4
  M:
    min: 8
    max: 8
  N:
    min: 16
    max: 16
  # K:
  #   min: 4
  #   max: 4
  # M:
  #   min: 4
  #   max: 4
  # N:
  #   min: 8
  #   max: 8

data_that_stays_constant:
  x_magnitude: [1,2]
  noise_std: 0.25
  x_magnitude_ood: [3,6]
  noise_std_ood: 0.5

# support accuracy
support_accuracy_nr_points_to_use: 2048 

# ISTA parameters
ISTA:
  nr_folds: 512
  mu:
    min: 0.1
    max: 2
    nr_points: 20
  lambda:
    min: 0.05
    max: 1
    nr_points: 20
  nr_points_to_use: 4096
  weighting_for_first_fold: 1 # the first fold is weighted by this factor, increasing to the last fold, which is always weighted by 1 (if 1, all folds are equally weighted)

# LISTA parameters (Learned ISTA)
LISTA:
  nr_folds: 512
  batch_size: 64
  nr_of_batches: 8192
  learning_rate: 0.001
  weighting_for_first_fold: 1 # the first fold is weighted by this factor, increasing to the last fold, which is always weighted by 1 (if 1, all folds are equally weighted)
  patience: 1024

# RLISTA parameters (Regularized - Learned - ISTA)
RLISTA:
  nr_folds: 512
  batch_size: 64
  nr_of_batches: 8192
  learning_rate: 0.001
  weighting_for_first_fold: 1 # the first fold is weighted by this factor, increasing to the last fold, which is always weighted by 1 (if 1, all folds are equally weighted)
  patience: 1024
  regularization:
    weight: 10
    nr_paths: 1
    anchor_point_std: 1
    nr_points_along_path: 4096 # 2^12
    path_delta: 0.001

# Path parameters
Path:
  nr_paths: 1 # number of paths to generate
  anchor_point_std: 1 # standard deviation of the anchor points, where the path will bounce between
  nr_points_along_path: 1048576 # 2^20
  path_delta: 0.001

    